# Generated by Django 5.0.7 on 2025-09-11 02:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModuleRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_core', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Module Registry',
            },
        ),
        migrations.CreateModel(
            name='RoleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('owner', 'Owner'), ('system_admin', 'System Admin'), ('project_admin', 'Project Admin'), ('operator', 'Operator')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('level', models.IntegerField(help_text='Role hierarchy level (lower=higher privileges)')),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.CreateModel(
            name='PrivilegeRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('admin', 'Admin'), ('inventory', 'Inventory'), ('reports', 'Reports'), ('users', 'Users'), ('system', 'System')], max_length=20)),
                ('is_core', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privileges', to='control_plane.moduleregistry')),
            ],
            options={
                'verbose_name_plural': 'Privilege Registry',
                'unique_together': {('name', 'module')},
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^[a-z][a-z0-9_]*$', 'Slug must start with letter and contain only lowercase letters, numbers, and underscores')])),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('archived', 'Archived')], default='active', max_length=20)),
                ('database_name', models.CharField(editable=False, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='control_plane_owned_projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create_project', 'Create Project'), ('update_project', 'Update Project'), ('delete_project', 'Delete Project'), ('add_user', 'Add User'), ('remove_user', 'Remove User'), ('change_role', 'Change Role'), ('grant_privilege', 'Grant Privilege'), ('revoke_privilege', 'Revoke Privilege'), ('enable_module', 'Enable Module'), ('disable_module', 'Disable Module')], max_length=50)),
                ('details', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_targets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='control_plane.project')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ProjectModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True)),
                ('enabled_at', models.DateTimeField(auto_now_add=True)),
                ('enabled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_plane.moduleregistry')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enabled_modules', to='control_plane.project')),
            ],
            options={
                'unique_together': {('project', 'module')},
            },
        ),
        migrations.CreateModel(
            name='ProjectPrivilegeAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_granted', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('privilege', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_plane.privilegeregistry')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privilege_overrides', to='control_plane.project')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_plane.roletype')),
            ],
            options={
                'unique_together': {('project', 'role', 'privilege')},
            },
        ),
        migrations.CreateModel(
            name='ProjectMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='control_plane_added_memberships', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='control_plane.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_plane_memberships', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_plane.roletype')),
            ],
            options={
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.CreateModel(
            name='GlobalPrivilegeAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_granted', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('privilege', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='control_plane.privilegeregistry')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='global_privileges', to='control_plane.roletype')),
            ],
            options={
                'unique_together': {('role', 'privilege')},
            },
        ),
    ]
